# docker-machine ip
# docker -it -p 8000:80 IMAGE_NAME /bin/bash
# curl http://192.168.99.100:8000

# docker_の接頭辞は-pオプションで変更可能
# docker-compose -p PROJECT_NAME up -d

# サーバーをデーモンで起動(まとめて)
# docker-compose up -d

version: '2'

volumes:
  pystock_volume:
    driver: local

services:
  # docker build -t pystock-base -f ./base/Dockerfile .
  base:
    build:
      context: ../
      dockerfile: ./docker/base/Dockerfile
    container_name: pystock_base

  pystock_repo:
    image: centos
    volumes:
        - ../:/pystock

  mysql:
    image: mysql
    volumes:
        - ./mysql/conf.d:/etc/mysql/conf.d
        - pystock_volume:/var/lib/mysql
        - ..:/docker
    working_dir: /docker
    environment:
        MYSQL_ALLOW_EMPTY_PASSWORD: 1
        MYSQL_DATABASE: stock

  test:
    build: ./test
    container_name: pystock_test
    depends_on:
        - mysql
    links:
      - mysql:db
    ports:
        - "9002:80"
    environment:
        DATABASE_URL: "mysql+pymysql://root@db:3306/stock?charset=utf8"

    # command: gunicorn -b 0.0.0.0:80 stock.server.main:app --log-file -
    entrypoint: pystock serve --port 80 --host 0.0.0.0

# on host
# git clone git@github.com:her0e1c1/pystock.git
# docker create -v `pwd`./pystock:/pystock --name pystock-repo centos
# busybox seems to be not updated even if host changes it
# docker create -v `pwd`./pystock:/pystock --name pystock-repo busybox
# check if the repo is mounted
# docker run --volumes-from pystock-repo centos ls /pystock
# run
# docker run -e DATABASE_URL="mysql+pymysql://root@192.168.99.100:3306/stock?charset=utf8" -p 8000:80 --rm --volumes-from pystock -it pystock-repo sh -c "/bin/python3.4 /pystock/setup.py develop && pystock setup && pystock serve --port 80 --host 0.0.0.0"

  web:
    image: docker_base
    container_name: pystock_web
    ports:
        - "8002:80"
    volumes_from:
        - pystock_repo
    environment:
        DATABASE_URL: "mysql+pymysql://root@db:3306/stock?charset=utf8"
    links:
      - mysql:db
    depends_on:
        - base
        - mysql
        - pystock_repo
    working_dir: /pystock

    # ttyを設定しない場合は直接入るみたい(ttyの設定は必須)
    # docker-compose run web
    tty: true
    stdin_open: true

    # web can't wait for mysql to start completely. so manually run this
    # docker exec pystock_web python3 setup.py develop
    # docker exec pystock_web pystock setup
    # docker commit pystock_mysql pystock_mysql_setup

    # docker exec pystock_web pystock serve --port 80 --host 0.0.0.0
    # docker exec -it pystock_web bash
