# サーバーをデーモンで起動(まとめて)
# docker-compose up -d
# ここに起動
# docker-compose run base repo mysql server

version: '2'

# docker build -t pystock-base -f ./base/Dockerfile .
services:
  base:
    build: ./base
    container_name: pystock_base

  pystock_repo:
    image: centos
    container_name: pystock_repo
    volumes:
        - ../:/pystock

  # 以下のコマンドで起動中のmysqlのコンソールに入れる
  # docker exec -it docker_mysql_1 mysql stock
  # snapshot
  # docker commit docker_mysql_1 docker_mysql_1:v1
  # 別名の方がよい?
  # docker commit docker_mysql_1 OTHER
  mysql:
    image: mysql
    container_name: pystock_mysql
    ports:
        - "3306:3306"
    volumes:
        - ./mysql/conf.d:/etc/mysql/conf.d
    environment:
        MYSQL_ALLOW_EMPTY_PASSWORD: 1
        MYSQL_DATABASE: stock

  test:
    build: ./test
    container_name: pystock_test
    ports:
        - "9002:80"
    environment:
        DATABASE_URL: "mysql+pymysql://root@192.168.99.100:3306/stock?charset=utf8"
    entrypoint: pystock serve --port 80 --host 0.0.0.0

  web:
    image: docker_base
    container_name: pystock_web
    # build: ./web
    ports:
        - "8002:80"
    volumes_from:
        - pystock_repo
    environment:
        DATABASE_URL: "mysql+pymysql://root@192.168.99.100:3306/stock?charset=utf8"
    depends_on:
        - base
        - pystock_repo
    working_dir: /pystock

    # ttyを設定しない場合は直接入るみたい(ttyの設定は必須)
    # docker-compose run web
    tty: true
    stdin_open: true

    # web can't wait for mysql to start completely. so manually run this
    # docker exec docker_web_1 sh -c "python3 setup.py develop && pystock setup"
    # docker exec docker_web_1 pystock serve --port 80 --host 0.0.0.0
    # docker exec -it docker_web_1 bash
